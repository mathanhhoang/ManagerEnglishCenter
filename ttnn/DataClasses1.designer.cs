#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ttnn
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TTNN")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDANGNHAP(DANGNHAP instance);
    partial void UpdateDANGNHAP(DANGNHAP instance);
    partial void DeleteDANGNHAP(DANGNHAP instance);
    partial void InsertTTHV(TTHV instance);
    partial void UpdateTTHV(TTHV instance);
    partial void DeleteTTHV(TTHV instance);
    partial void InsertKHOAHOC(KHOAHOC instance);
    partial void UpdateKHOAHOC(KHOAHOC instance);
    partial void DeleteKHOAHOC(KHOAHOC instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ttnn.Properties.Settings.Default.TTNNConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DANGNHAP> DANGNHAPs
		{
			get
			{
				return this.GetTable<DANGNHAP>();
			}
		}
		
		public System.Data.Linq.Table<TTHV> TTHVs
		{
			get
			{
				return this.GetTable<TTHV>();
			}
		}
		
		public System.Data.Linq.Table<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this.GetTable<KHOAHOC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGNHAP")]
	public partial class DANGNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _MatKhau;
		
		private string _NameID;
		
		private string _NamSinhID;
		
		private string _QQID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNameIDChanging(string value);
    partial void OnNameIDChanged();
    partial void OnNamSinhIDChanging(string value);
    partial void OnNamSinhIDChanged();
    partial void OnQQIDChanging(string value);
    partial void OnQQIDChanged();
    #endregion
		
		public DANGNHAP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameID", DbType="NVarChar(50)")]
		public string NameID
		{
			get
			{
				return this._NameID;
			}
			set
			{
				if ((this._NameID != value))
				{
					this.OnNameIDChanging(value);
					this.SendPropertyChanging();
					this._NameID = value;
					this.SendPropertyChanged("NameID");
					this.OnNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinhID", DbType="NVarChar(50)")]
		public string NamSinhID
		{
			get
			{
				return this._NamSinhID;
			}
			set
			{
				if ((this._NamSinhID != value))
				{
					this.OnNamSinhIDChanging(value);
					this.SendPropertyChanging();
					this._NamSinhID = value;
					this.SendPropertyChanged("NamSinhID");
					this.OnNamSinhIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQID", DbType="NVarChar(50)")]
		public string QQID
		{
			get
			{
				return this._QQID;
			}
			set
			{
				if ((this._QQID != value))
				{
					this.OnQQIDChanging(value);
					this.SendPropertyChanging();
					this._QQID = value;
					this.SendPropertyChanged("QQID");
					this.OnQQIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TTHV")]
	public partial class TTHV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HoTen;
		
		private string _NamSinh;
		
		private string _QueQuan;
		
		private string _KhoaHoc;
		
		private EntityRef<KHOAHOC> _KHOAHOC1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNamSinhChanging(string value);
    partial void OnNamSinhChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    partial void OnKhoaHocChanging(string value);
    partial void OnKhoaHocChanged();
    #endregion
		
		public TTHV()
		{
			this._KHOAHOC1 = default(EntityRef<KHOAHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="NVarChar(50)")]
		public string NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(50)")]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhoaHoc", DbType="NVarChar(50)")]
		public string KhoaHoc
		{
			get
			{
				return this._KhoaHoc;
			}
			set
			{
				if ((this._KhoaHoc != value))
				{
					if (this._KHOAHOC1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._KhoaHoc = value;
					this.SendPropertyChanged("KhoaHoc");
					this.OnKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_TTHV", Storage="_KHOAHOC1", ThisKey="KhoaHoc", OtherKey="KhoaHoc1", IsForeignKey=true)]
		public KHOAHOC KHOAHOC1
		{
			get
			{
				return this._KHOAHOC1.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC1.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC1.Entity = null;
						previousValue.TTHVs.Remove(this);
					}
					this._KHOAHOC1.Entity = value;
					if ((value != null))
					{
						value.TTHVs.Add(this);
						this._KhoaHoc = value.KhoaHoc1;
					}
					else
					{
						this._KhoaHoc = default(string);
					}
					this.SendPropertyChanged("KHOAHOC1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOAHOC")]
	public partial class KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KhoaHoc1;
		
		private string _TenKhoaHoc;
		
		private string _GiaoVien;
		
		private string _Ca;
		
		private EntitySet<TTHV> _TTHVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhoaHoc1Changing(string value);
    partial void OnKhoaHoc1Changed();
    partial void OnTenKhoaHocChanging(string value);
    partial void OnTenKhoaHocChanged();
    partial void OnGiaoVienChanging(string value);
    partial void OnGiaoVienChanged();
    partial void OnCaChanging(string value);
    partial void OnCaChanged();
    #endregion
		
		public KHOAHOC()
		{
			this._TTHVs = new EntitySet<TTHV>(new Action<TTHV>(this.attach_TTHVs), new Action<TTHV>(this.detach_TTHVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="KhoaHoc", Storage="_KhoaHoc1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KhoaHoc1
		{
			get
			{
				return this._KhoaHoc1;
			}
			set
			{
				if ((this._KhoaHoc1 != value))
				{
					this.OnKhoaHoc1Changing(value);
					this.SendPropertyChanging();
					this._KhoaHoc1 = value;
					this.SendPropertyChanged("KhoaHoc1");
					this.OnKhoaHoc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoaHoc", DbType="NVarChar(50)")]
		public string TenKhoaHoc
		{
			get
			{
				return this._TenKhoaHoc;
			}
			set
			{
				if ((this._TenKhoaHoc != value))
				{
					this.OnTenKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._TenKhoaHoc = value;
					this.SendPropertyChanged("TenKhoaHoc");
					this.OnTenKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaoVien", DbType="NVarChar(50)")]
		public string GiaoVien
		{
			get
			{
				return this._GiaoVien;
			}
			set
			{
				if ((this._GiaoVien != value))
				{
					this.OnGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._GiaoVien = value;
					this.SendPropertyChanged("GiaoVien");
					this.OnGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ca", DbType="NChar(10)")]
		public string Ca
		{
			get
			{
				return this._Ca;
			}
			set
			{
				if ((this._Ca != value))
				{
					this.OnCaChanging(value);
					this.SendPropertyChanging();
					this._Ca = value;
					this.SendPropertyChanged("Ca");
					this.OnCaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_TTHV", Storage="_TTHVs", ThisKey="KhoaHoc1", OtherKey="KhoaHoc")]
		public EntitySet<TTHV> TTHVs
		{
			get
			{
				return this._TTHVs;
			}
			set
			{
				this._TTHVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TTHVs(TTHV entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC1 = this;
		}
		
		private void detach_TTHVs(TTHV entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC1 = null;
		}
	}
}
#pragma warning restore 1591
